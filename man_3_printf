.\" Manpage for _printf function
.\"
.TH man 1 "06 Nov 2023" "1.0" "printf man page"

.SH NAME
Printf \- prints string to stdout. The function takes in a format specifier "%" as a call to print out predefined strings or integers.
.SH SYNOPSIS
int _printf(const char *format, ...);
.SH DESCRIPTION
_printf - This is a variadic function that prints all characters until it reaches a format specifier (%) or the end of a given string (\\0). After finding the specifier it looks to the next character given and reads if it is a s, c, %, d, i, or empty(\\0). After it finds which specifier is given it performs the task which corresponds with the given specifier
.SH OPTIONS
The _printf function format specifier "%" takes 5 potential arguments. "c" finds a variable containing a single character and prints it over the "%c". "s" finds a variable containing a string of characters and prints it over the "%s". "%" reads input as "%%" which will let the function know to print a signle "%". "d" finds a variable containing a string of numbers and converts those numbers into an integer value for other uses such as arithmetic. It will then print out the full integer one by one. "i" at this moment handles a string of numbers the same as "%d". So the same process with a different specifier.
.B
.IP "c"
int print_char(va_list ap); This function finds the argument passed and prints the singular character that corresponds with the placement of the %c.
.B
.IP "s"
int print_string(va_list ap); This function finds the argument passed and prints the string of characters that corresponds with the placement of the %s.
.B
.IP "%"
In the _printf function there is an if statement that tests if the second % is present. If so the function prints a single "%".
.B
.IP "d" "i"
int print_digit(va_list ap); This function gathers the argument and prints the integer value.
.SH RETURN VALUE
Upon success _printf returns the number of bytes neccessary for the number of characters printed.
.SH AUTHORS
Elijah Poole Courtney Graham
